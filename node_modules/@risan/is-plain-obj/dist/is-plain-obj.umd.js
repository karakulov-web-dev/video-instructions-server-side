(function (global, factory) {
  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :
  typeof define === 'function' && define.amd ? define(factory) :
  (global.isPlainObj = factory());
}(this, (function () { 'use strict';

  function _typeof(obj) {
    if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
      _typeof = function (obj) {
        return typeof obj;
      };
    } else {
      _typeof = function (obj) {
        return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
      };
    }

    return _typeof(obj);
  }

  /**
   * Check if the given value is a plain object.
   *
   * @param {Mixed} value
   * @return {Boolean}
   */
  var isPlainObj = function isPlainObj(value) {
    if (_typeof(value) !== "object") {
      return false;
    }

    if (value === undefined || value === null) {
      return false;
    }

    var prototype = Object.getPrototypeOf(value);

    if (prototype === null || prototype === Object.getPrototypeOf({})) {
      return true;
    }

    return value.constructor === Object;
  };

  return isPlainObj;

})));
